package progetto;

public interface InterfSecureDataContainer<E> {
    //Da come risultato true se Id è gia presente, false altrimenti
    public boolean UserDuplicate(String Id);

    // Crea l’identità un nuovo utente della collezione
    public void createUser(String Id, String passw);

    // Rimuove l’utente dalla collezione
    public void RemoveUser(String Id, String passw);

    // Restituisce il numero degli elementi di un utente presenti nella
    // collezione
    public int getSize(String Owner, String passw);

    // Inserisce il valore del dato nella collezione
    // se vengono rispettati i controlli di identità
   public boolean put(String Owner, String passw, E data);

    // Ottiene una copia del valore del dato nella collezione
    // se vengono rispettati i controlli di identità
    public E get(String Owner, String passw, E data);  // con shallow copy

    // Rimuove il dato nella collezione
    // se vengono rispettati i controlli di identità
    public E remove(String Owner, String passw, E data);

   // Crea una copia del  dato nella collezione
    // se vengono rispettati i controlli di identità
    public void copy(String Owner, String passw, E data);

    // Condivide il dato nella collezione con un altro utente
    // se vengono rispettati i controlli di identità
    public void share(String Owner, String passw, String Other, E data);  //meglio dargli una copia o l'oggetto stesso?

/*    // restituisce un iteratore (senza remove) che genera tutti i dati
    // dell’utente in ordine arbitrario
    // se vengono rispettati i controlli di identità
    public Iterator<E> getIterator(String Owner, String passw);

    */
    // … altre operazione da definire a scelta
}
